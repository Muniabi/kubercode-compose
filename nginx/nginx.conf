events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Определяем upstream для каждого микросервиса
    upstream kubercode-sso {
        server kubercode-sso:1488;
    }

    # upstream kubercode-student {
    #     server kubercode-student:8080;
    # }

    # Общие настройки для всех серверов
    server {
        listen 8080;
        server_name localhost;

        # Общие заголовки для всех прокси
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Маршрутизация для SSO сервиса
        location /api/v1/auth/ {
            set $cors_origin "";
            
            if ($http_origin ~* "^(http://localhost:3000|http://85.198.82.117:3000)$") {
                set $cors_origin $http_origin;
            }

            # CORS настройки
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' $cors_origin;
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
                add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain; charset=utf-8';
                add_header 'Content-Length' 0;
                return 204;
            }

            add_header 'Access-Control-Allow-Origin' $cors_origin always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,Accept' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;

            proxy_pass http://kubercode-sso;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Маршрутизация для Student сервиса
        # location /api/v1/student/ {
        #     proxy_pass http://kubercode-student;
        # }

        # Добавьте здесь другие микросервисы по аналогии
    }
}